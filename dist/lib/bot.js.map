{"version":3,"sources":["../../lib/bot.js"],"names":["mongoose","require","module","exports","PageInfo","Schema","id","type","String","required","title","picture","owner","Types","ObjectId","ref","bot_id","_id","StatusSchema","read_only","Boolean","default","status","enum","page","page_info","payments_status","BotSchema","date_added","Number","Date","now","timezone_offset","timezone_name","default_block","first_block","help_block","ai_block","blocks","description","admins","default_group_id","groups","timestamps","createdAt","updatedAt","Model","model","e"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;;AAE3B,MAAIC,WAAW,IAAIJ,SAASK,MAAb,CAAoB;AACjCC,QAAI,EAACC,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAD6B;AAEjCC,WAAO,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAF0B;AAGjCE,aAAS,EAACJ,MAAMC,MAAP,EAHwB;AAIjCI,WAAO,EAACL,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,MAA5C,EAAoDN,UAAU,KAA9D,EAJ0B;AAKjCO,YAAQ,EAACT,MAAMC,MAAP;AALyB,GAApB,EAMZ,EAACS,KAAK,KAAN,EAAaX,IAAI,KAAjB,EANY,CAAf;;AAQA,MAAIY,eAAe,IAAIlB,SAASK,MAAb,CAAoB;AACrCc,eAAW,EAACZ,MAAMa,OAAP,EAAgBX,UAAU,IAA1B,EAAgCY,SAAS,KAAzC,EAD0B;AAErCC,YAAQ;AACNf,YAAMC,MADA,EACQC,UAAU,IADlB,EACwBc,MAAM,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,CAD9B,EACkEF,SAAS;AAD3E,KAF6B;AAKrCG,UAAM,EAACjB,MAAMC,MAAP,EAL+B;AAMrCiB,eAAW,EAAClB,MAAMH,QAAP,EAN0B;AAOrCsB,qBAAiB,EAACnB,MAAMC,MAAP;AAPoB,GAApB,EAQhB,EAACS,KAAK,KAAN,EAAaX,IAAI,KAAjB,EARgB,CAAnB;;AAUA,MAAIqB,YAAY,IAAI3B,SAASK,MAAb,CAAoB;AAClCK,WAAO,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAD2B;AAElCmB,gBAAY,EAACrB,MAAMsB,MAAP,EAAeR,SAASS,KAAKC,GAAL,EAAxB,EAAoCtB,UAAU,IAA9C,EAFsB;AAGlCuB,qBAAiB,EAACzB,MAAMsB,MAAP,EAHiB;AAIlCI,mBAAe,EAAC1B,MAAMC,MAAP,EAJmB;AAKlC0B,mBAAe,EAAC3B,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EALmB;AAMlC0B,iBAAa,EAAC5B,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EANqB;AAOlC2B,gBAAY,EAAC7B,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EAPsB;AAQlC4B,cAAU,EAAC9B,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EARwB;AASlC6B,YAAQ,CAAC,EAAC/B,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EAAD,CAT0B;AAUlC8B,iBAAa,EAAChC,MAAMC,MAAP,EAAeP,SAAS,IAAxB,EAVqB;AAWlCqB,YAAQ,EAACf,MAAMW,YAAP,EAAqBT,UAAU,IAA/B,EAX0B;AAYlC+B,YAAQ,CAAC,EAACjC,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,MAA5C,EAAoDN,UAAU,KAA9D,EAAD,CAZ0B;AAalCgC,sBAAkB,EAAClC,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EAbgB;AAclCiC,YAAQ,CAAC,EAACnC,MAAMP,SAASK,MAAT,CAAgBQ,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,OAA5C,EAAqDN,UAAU,KAA/D,EAAD;AAd0B,GAApB,EAeb,EAACkC,YAAY,EAACC,WAAW,YAAZ,EAA0BC,WAAW,YAArC,EAAb,EAfa,CAAhB;;AAiBA,MAAIC,cAAJ;AACA,MAAI;AACF;AACAA,YAAQ9C,SAAS+C,KAAT,CAAe,KAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVF,YAAQ9C,SAAS+C,KAAT,CAAe,KAAf,EAAsBpB,SAAtB,CAAR;AACD;AACD,SAAOmB,KAAP;AACD,CA7CD","file":"bot.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\n\nmodule.exports = function () {\n\n  let PageInfo = new mongoose.Schema({\n    id: {type: String, required: true},\n    title: {type: String, required: true},\n    picture: {type: String},\n    owner: {type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false},\n    bot_id: {type: String}\n  }, {_id: false, id: false})\n\n  let StatusSchema = new mongoose.Schema({\n    read_only: {type: Boolean, required: true, default: false},\n    status: {\n      type: String, required: true, enum: ['draft', 'connected', 'disabled'], default: 'draft'\n    },\n    page: {type: String},\n    page_info: {type: PageInfo},\n    payments_status: {type: String}\n  }, {_id: false, id: false})\n\n  let BotSchema = new mongoose.Schema({\n    title: {type: String, required: true},\n    date_added: {type: Number, default: Date.now(), required: true},\n    timezone_offset: {type: Number},\n    timezone_name: {type: String},\n    default_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    first_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    help_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    ai_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    blocks: [{type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false}],\n    description: {type: String, require: true},\n    status: {type: StatusSchema, required: true},\n    admins: [{type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false}],\n    default_group_id: {type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false},\n    groups: [{type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false}]\n  }, {timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('bot')\n  } catch (e) {\n    Model = mongoose.model('bot', BotSchema)\n  }\n  return Model\n}\n"]}