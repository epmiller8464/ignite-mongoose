{"version":3,"sources":["../../lib/bot.js"],"names":["mongoose","require","module","exports","PageInfoSchema","Schema","page_id","type","String","required","title","picture","owner","Types","ObjectId","ref","bot_id","StatusSchema","read_only","Boolean","default","status","enum","page","page_info","payments_status","BotSchema","date_added","Number","Date","now","timezone_offset","timezone_name","default_block","starting_block","help_block","menu_block","ai_block","blocks","description","admins","default_group_id","groups","is_valid","timestamps","createdAt","updatedAt","collection","index","Model","model","e"],"mappings":"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","file":"bot.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\n\nmodule.exports = function () {\n\n  let PageInfoSchema = new mongoose.Schema({\n    page_id: {type: String, required: true},\n    title: {type: String, required: true},\n    picture: {type: String},\n    owner: {type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false},\n    bot_id: {type: String}\n  })\n\n  let StatusSchema = new mongoose.Schema({\n    read_only: {type: Boolean, required: true, default: false},\n    status: {\n      type: String, required: true, enum: ['draft', 'connected', 'disabled'], default: 'draft'\n    },\n    page: {type: String},\n    page_info: {type: PageInfoSchema},\n    payments_status: {type: String}\n  })\n\n  let BotSchema = new mongoose.Schema({\n    title: {type: String, required: true},\n    date_added: {type: Number, default: Date.now(), required: true},\n    timezone_offset: {type: Number},\n    timezone_name: {type: String},\n    default_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    starting_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    help_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    menu_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    ai_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    blocks: [{type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false}],\n    description: {type: String, require: true},\n    status: {type: StatusSchema, required: false},\n    admins: [{type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false}],\n    default_group_id: {type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false},\n    groups: [{type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false}],\n    is_valid: {type: Boolean, required: true, default: false}\n  }, {timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}}, {collection: 'bot'})\n\n  BotSchema.index({title: 1, description: 1})\n  BotSchema.index({admins: 1})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('bot')\n  } catch (e) {\n    Model = mongoose.model('bot', BotSchema)\n  }\n  return Model\n}\n"]}