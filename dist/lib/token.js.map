{"version":3,"sources":["../../lib/token.js"],"names":["mongoose","require","module","exports","Model","tokenSchema","Schema","token","type","String","required","issued_on","Number","default","Date","now","jwtid","blackListed","Boolean","revoked","enum","collection","index","unique","model","e"],"mappings":"AAAA;;AACA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;AAC3B,MAAIC,cAAJ;;AAEA,MAAIC,cAAc,IAAIL,SAASM,MAAb,CAAoB;AACpCC,WAAO,EAACC,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAD6B;AAEpCC,eAAW,EAACH,MAAMI,MAAP,EAAeX,SAAS,IAAxB,EAA8BY,SAASC,KAAKC,GAAL,EAAvC,EAFyB;AAGpCC,WAAO,EAACR,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAH6B;AAIpCO,iBAAa,EAACT,MAAMU,OAAP,EAAgBR,UAAU,IAA1B,EAAgCG,SAAS,KAAzC,EAJuB;AAKpCM,aAAS,EAACX,MAAMU,OAAP,EAAgBR,UAAU,IAA1B,EAAgCG,SAAS,KAAzC,EAL2B;AAMpCL,UAAM,EAACA,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAA+BU,MAAM,CAAC,cAAD,EAAiB,SAAjB,EAA4B,QAA5B,CAArC;AAN8B,GAApB,EAOf,EAACC,YAAY,OAAb,EAPe,CAAlB;;AASAhB,cAAYiB,KAAZ,CAAkB,EAACf,OAAO,CAAR,EAAlB,EAA8B,EAACgB,QAAQ,IAAT,EAA9B;AACAlB,cAAYiB,KAAZ,CAAkB,EAACN,OAAO,CAAR,EAAlB,EAA8B,EAACO,QAAQ,IAAT,EAA9B;AACAlB,cAAYiB,KAAZ,CAAkB,EAACd,MAAM,CAAP,EAAlB;;AAEA,MAAI;AACF;AACAJ,YAAQJ,SAASwB,KAAT,CAAe,OAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVrB,YAAQJ,SAASwB,KAAT,CAAe,OAAf,EAAwBnB,WAAxB,CAAR;AACD;AACD,SAAOD,KAAP;AACD,CAvBD","file":"token.js","sourcesContent":["'use strict'\nconst mongoose = require('mongoose')\n\nmodule.exports = function () {\n  let Model\n\n  let tokenSchema = new mongoose.Schema({\n    token: {type: String, required: true},\n    issued_on: {type: Number, require: true, default: Date.now()},\n    jwtid: {type: String, required: true},\n    blackListed: {type: Boolean, required: true, default: false},\n    revoked: {type: Boolean, required: true, default: false},\n    type: {type: String, required: true, enum: ['verification', 'refresh', 'access']}\n  }, {collection: 'token'})\n\n  tokenSchema.index({token: 1}, {unique: true})\n  tokenSchema.index({jwtid: 1}, {unique: true})\n  tokenSchema.index({type: 1})\n\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('token')\n  } catch (e) {\n    Model = mongoose.model('token', tokenSchema)\n  }\n  return Model\n}"]}