{"version":3,"sources":["../../lib/user.js"],"names":["mongoose","require","module","exports","Model","UserSchema","Schema","name","type","String","displayName","date_added","Number","default","Date","now","profile_url","email","trim","lowercase","required","minLength","match","accessToken","refreshToken","email_verified","Boolean","provider_id","provider","profile","Object","flags","picture_url","has_connected_bots","pages_access","subscriptions_access","payments_access","bot_subscriptions","Types","ObjectId","ref","collection","index","model","e"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAiB,YAAY;;AAE3B,MAAIC,cAAJ;;AAEA,MAAIC,aAAa,IAAIL,SAASM,MAAb,CAAoB;AACnCC,UAAM,EAACC,MAAMC,MAAP,EAD6B;AAEnCC,iBAAa,EAACF,MAAMC,MAAP,EAFsB;AAGnCE,gBAAY,EAACH,MAAMI,MAAP,EAAeX,SAAS,IAAxB,EAA8BY,SAASC,KAAKC,GAAL,EAAvC,EAHuB;AAInCC,iBAAa,EAACR,MAAMC,MAAP,EAJsB;AAKnCQ,WAAO;AACLT,YAAMC,MADD,EACSS,MAAM,IADf,EACqBC,WAAW,IADhC,EACsCC,UAAU,KADhD,EACuDC,WAAW,CADlE,EACqEC,OAAO;AAD5E,KAL4B;AAQnCC,iBAAa,EAACf,MAAMC,MAAP,EARsB;AASnCe,kBAAc,EAAChB,MAAMC,MAAP,EATqB;AAUnCgB,oBAAgB,EAACjB,MAAMkB,OAAP,EAVmB;AAWnCC,iBAAa,EAACnB,MAAMC,MAAP,EAXsB;AAYnCmB,cAAU,EAACpB,MAAMC,MAAP,EAZyB;AAanCoB,aAAS,EAACrB,MAAMsB,MAAP,EAb0B;AAcnCC,WAAO,CAACtB,MAAD,CAd4B;AAenCuB,iBAAa,EAACxB,MAAMC,MAAP,EAfsB;AAgBnCwB,wBAAoB,EAACzB,MAAMkB,OAAP,EAAgBN,UAAU,IAA1B,EAAgCP,SAAS,KAAzC,EAhBe;AAiBnCqB,kBAAc,EAAC1B,MAAMkB,OAAP,EAAgBN,UAAU,IAA1B,EAAgCP,SAAS,KAAzC,EAjBqB;AAkBnCsB,0BAAsB,EAAC3B,MAAMkB,OAAP,EAAgBN,UAAU,IAA1B,EAAgCP,SAAS,KAAzC,EAlBa;AAmBnCuB,qBAAiB,EAAC5B,MAAMkB,OAAP,EAAgBN,UAAU,IAA1B,EAAgCP,SAAS,KAAzC,EAnBkB;AAoBnCwB,uBAAmB,CAAC,EAAC7B,MAAMR,SAASM,MAAT,CAAgBgC,KAAhB,CAAsBC,QAA7B,EAAuCC,KAAK,KAA5C,EAAmDpB,UAAU,KAA7D,EAAD;;AApBgB,GAApB,EAsBd,EAACqB,YAAY,MAAb,EAtBc,CAAjB;AAuBApC,aAAWqC,KAAX,CAAiB,EAACnC,MAAM,CAAP,EAAjB;AACAF,aAAWqC,KAAX,CAAiB,EAACzB,OAAO,CAAR,EAAjB;AACAZ,aAAWqC,KAAX,CAAiB,EAACf,aAAa,CAAd,EAAjB;;AAEA,MAAI;AACF;AACAvB,YAAQJ,SAAS2C,KAAT,CAAe,MAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVxC,YAAQJ,SAAS2C,KAAT,CAAe,MAAf,EAAuBtC,UAAvB,CAAR;AACD;AACD,SAAOD,KAAP;AACD,CAtCD","file":"user.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\n\nmodule.exports = function () {\n\n  let Model;\n\n  let UserSchema = new mongoose.Schema({\n    name: {type: String},\n    displayName: {type: String},\n    date_added: {type: Number, require: true, default: Date.now()},\n    profile_url: {type: String},\n    email: {\n      type: String, trim: true, lowercase: true, required: false, minLength: 1, match: /.+\\@.+\\..+/\n    },\n    accessToken: {type: String},\n    refreshToken: {type: String},\n    email_verified: {type: Boolean},\n    provider_id: {type: String},\n    provider: {type: String},\n    profile: {type: Object},\n    flags: [String],\n    picture_url: {type: String},\n    has_connected_bots: {type: Boolean, required: true, default: false},\n    pages_access: {type: Boolean, required: true, default: false},\n    subscriptions_access: {type: Boolean, required: true, default: false},\n    payments_access: {type: Boolean, required: true, default: false},\n    bot_subscriptions: [{type: mongoose.Schema.Types.ObjectId, ref: 'bot', required: false}]\n\n  }, {collection: 'user'})\n  UserSchema.index({name: 1})\n  UserSchema.index({email: 1})\n  UserSchema.index({provider_id: 1})\n\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('user')\n  } catch (e) {\n    Model = mongoose.model('user', UserSchema)\n  }\n  return Model\n}\n"]}