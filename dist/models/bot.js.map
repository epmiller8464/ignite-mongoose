{"version":3,"sources":["../../models/bot.js"],"names":["mongoose","require","moment","module","exports","PageInfoSchema","Schema","page_id","type","String","required","title","picture","owner","Types","ObjectId","ref","bot_id","access_token","_id","StatusSchema","read_only","Boolean","default","status","enum","page","page_info","payments_status","BotSchema","date_added","Number","valueOf","timezone","offset","name","default_block","starting_block","help_block","menu_block","ai_block","blocks","description","admins","created_by","default_group_id","groups","is_valid","history","Object","timestamps","createdAt","updatedAt","collection","index","Model","model","e"],"mappings":"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","file":"bot.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\nlet moment = require('moment')()\n\nmodule.exports = function () {\n\n  let PageInfoSchema = new mongoose.Schema({\n    page_id: {type: String, required: true},\n    title: {type: String, required: true},\n    picture: {type: String},\n    owner: {type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false},\n    bot_id: {type: String},\n    access_token: {type: String}\n  }, {_id: false})\n\n  let StatusSchema = new mongoose.Schema({\n    read_only: {type: Boolean, required: true, default: false},\n    status: {\n      type: String, required: true, enum: ['draft', 'connected', 'disabled'], default: 'draft'\n    },\n    page: {type: String},\n    page_info: {type: PageInfoSchema},\n    payments_status: {type: String}\n  }, {_id: false})\n\n  let BotSchema = new mongoose.Schema({\n    title: {type: String, required: true},\n    date_added: {type: Number, required: true, default: moment.valueOf()},\n    timezone: {offset: {type: String}, name: {type: String}},\n    default_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    starting_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    help_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    menu_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    ai_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    blocks: [{type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false}],\n    description: {type: String, require: true},\n    status: {type: StatusSchema, required: false},\n    admins: [{type: mongoose.Schema.Types.ObjectId, ref: 'users', required: false}],\n    created_by: {type: mongoose.Schema.Types.ObjectId, ref: 'users', required: true},\n    default_group_id: {type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false},\n    groups: [{type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false}],\n    is_valid: {type: Boolean, required: true, default: false},\n    history: [Object]\n  }, {timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}}, {collection: 'bot'})\n\n  BotSchema.index({title: 1, description: 1})\n  BotSchema.index({admins: 1})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('bot')\n  } catch (e) {\n    Model = mongoose.model('bot', BotSchema)\n  }\n  return Model\n}\n"]}