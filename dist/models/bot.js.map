{"version":3,"sources":["../../models/bot.js"],"names":["mongoose","require","moment","module","exports","PageInfoSchema","Schema","page_id","type","String","required","title","picture","owner","Types","ObjectId","ref","bot_id","access_token","_id","StatusSchema","read_only","Boolean","default","status","enum","page","page_info","payments_status","BotSchema","maxLength","minLength","date_added","Number","valueOf","timezone","offset","name","default_block","default_group_id","starting_block","help_block","setting_block","ai_block","description","admins","created_by","groups","is_valid","history","Object","tags","timestamps","createdAt","updatedAt","collection","index","Model","model","e"],"mappings":"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","file":"bot.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\nlet moment = require('moment')()\n\nmodule.exports = function () {\n\n  let PageInfoSchema = new mongoose.Schema({\n    page_id: {type: String, required: true},\n    title: {type: String, required: true},\n    picture: {type: String},\n    owner: {type: mongoose.Schema.Types.ObjectId, ref: 'user', required: false},\n    bot_id: {type: String},\n    access_token: {type: String}\n  }, {_id: false})\n\n  let StatusSchema = new mongoose.Schema({\n    read_only: {type: Boolean, required: true, default: false},\n    status: {\n      type: String, required: true, enum: ['draft', 'connected', 'disabled'], default: 'draft'\n    },\n    page: {type: String},\n    page_info: {type: PageInfoSchema},\n    payments_status: {type: String}\n  }, {_id: false})\n\n  let BotSchema = new mongoose.Schema({\n    title: {type: String, require: true, maxLength: 80, minLength: 1},\n    date_added: {type: Number, required: true, default: moment.valueOf()},\n    timezone: {offset: {type: String}, name: {type: String}},\n    default_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    default_group_id: {type: mongoose.Schema.Types.ObjectId, ref: 'group', required: true},\n    starting_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    help_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    setting_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    ai_block: {type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false},\n    // blocks: [{type: mongoose.Schema.Types.ObjectId, ref: 'block', required: false}],\n    description: {\n      type: String, require: true, maxLength: 640, minLength: 1\n      // type: String, trim: true, lowercase: true, required: false, minLength: 1, match: /.+\\@.+\\..+/\n    },\n    status: {type: StatusSchema, required: false},\n    admins: [{type: mongoose.Schema.Types.ObjectId, ref: 'users', required: false}],\n    created_by: {type: mongoose.Schema.Types.ObjectId, ref: 'users', required: true},\n    groups: [{type: mongoose.Schema.Types.ObjectId, ref: 'group', required: false}],\n    is_valid: {type: Boolean, required: true, default: false},\n    history: [mongoose.Schema.Types.Object],\n    tags: [String]\n  }, {timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}}, {collection: 'bot'})\n\n  BotSchema.index({title: 1, description: 1})\n  BotSchema.index({admins: 1})\n\n  let Model\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('bot')\n  } catch (e) {\n    Model = mongoose.model('bot', BotSchema)\n  }\n  return Model\n}\n"]}