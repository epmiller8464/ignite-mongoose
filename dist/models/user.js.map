{"version":3,"sources":["../../models/user.js"],"names":["mongoose","require","moment","module","exports","Model","UserSchema","Schema","name","type","String","displayName","date_added","Number","required","default","valueOf","profile_url","email","trim","lowercase","minLength","match","accessToken","refreshToken","email_verified","Boolean","provider_id","auth_id","provider","profile","Types","Object","flags","picture_url","has_connected_bots","pages_access","subscriptions_access","payments_access","bot_subscriptions","ObjectId","ref","ip","history","timestamps","createdAt","updatedAt","collection","index","model","e"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,QAAR,GAAb;;AAEAE,OAAOC,OAAP,GAAiB,YAAY;;AAE3B,MAAIC,cAAJ;;AAEA,MAAIC,aAAa,IAAIN,SAASO,MAAb,CAAoB;AACnCC,UAAM,EAACC,MAAMC,MAAP,EAD6B;AAEnCC,iBAAa,EAACF,MAAMC,MAAP,EAFsB;AAGnCE,gBAAY,EAACH,MAAMI,MAAP,EAAeC,UAAU,IAAzB,EAA+BC,SAASb,OAAOc,OAAP,EAAxC,EAHuB;AAInCC,iBAAa,EAACR,MAAMC,MAAP,EAJsB;AAKnCQ,WAAO;AACLT,YAAMC,MADD,EACSS,MAAM,IADf,EACqBC,WAAW,IADhC,EACsCN,UAAU,KADhD,EACuDO,WAAW,CADlE,EACqEC,OAAO;AAD5E,KAL4B;AAQnCC,iBAAa,EAACd,MAAMC,MAAP,EARsB;AASnCc,kBAAc,EAACf,MAAMC,MAAP,EATqB;AAUnCe,oBAAgB,EAAChB,MAAMiB,OAAP,EAVmB;AAWnCC,iBAAa,EAAClB,MAAMC,MAAP,EAXsB;AAYnCkB,aAAS,EAACnB,MAAMC,MAAP,EAZ0B;AAanCmB,cAAU,EAACpB,MAAMC,MAAP,EAbyB;AAcnCoB,aAAS,EAACrB,MAAMT,SAASO,MAAT,CAAgBwB,KAAhB,CAAsBC,MAA7B,EAd0B;AAenCC,WAAO,CAACvB,MAAD,CAf4B;AAgBnCwB,iBAAa,EAACzB,MAAMC,MAAP,EAhBsB;AAiBnCyB,wBAAoB,EAAC1B,MAAMiB,OAAP,EAAgBZ,UAAU,IAA1B,EAAgCC,SAAS,KAAzC,EAjBe;AAkBnCqB,kBAAc,EAAC3B,MAAMiB,OAAP,EAAgBZ,UAAU,IAA1B,EAAgCC,SAAS,KAAzC,EAlBqB;AAmBnCsB,0BAAsB,EAAC5B,MAAMiB,OAAP,EAAgBZ,UAAU,IAA1B,EAAgCC,SAAS,KAAzC,EAnBa;AAoBnCuB,qBAAiB,EAAC7B,MAAMiB,OAAP,EAAgBZ,UAAU,IAA1B,EAAgCC,SAAS,KAAzC,EApBkB;AAqBnCwB,uBAAmB,CAAC,EAAC9B,MAAMT,SAASO,MAAT,CAAgBwB,KAAhB,CAAsBS,QAA7B,EAAuCC,KAAK,KAA5C,EAAmD3B,UAAU,KAA7D,EAAD,CArBgB;AAsBnC4B,QAAI,CAAChC,MAAD,CAtB+B;AAuBnCiC,aAAS,CAAC3C,SAASO,MAAT,CAAgBwB,KAAhB,CAAsBC,MAAvB;AAvB0B,GAApB,EAwBd,EAACY,YAAY,EAACC,WAAW,YAAZ,EAA0BC,WAAW,YAArC,EAAb,EAxBc,EAwBoD,EAACC,YAAY,MAAb,EAxBpD,CAAjB;;AA0BAzC,aAAW0C,KAAX,CAAiB,EAACxC,MAAM,CAAP,EAAjB;AACAF,aAAW0C,KAAX,CAAiB,EAAC9B,OAAO,CAAR,EAAjB;AACAZ,aAAW0C,KAAX,CAAiB,EAACrB,aAAa,CAAd,EAAjB;;AAEA,MAAI;AACF;AACAtB,YAAQL,SAASiD,KAAT,CAAe,MAAf,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV7C,YAAQL,SAASiD,KAAT,CAAe,MAAf,EAAuB3C,UAAvB,CAAR;AACD;AACD,SAAOD,KAAP;AACD,CAzCD","file":"user.js","sourcesContent":["'use strict'\nvar mongoose = require('mongoose')\nlet moment = require('moment')()\n\nmodule.exports = function () {\n\n  let Model\n\n  let UserSchema = new mongoose.Schema({\n    name: {type: String},\n    displayName: {type: String},\n    date_added: {type: Number, required: true, default: moment.valueOf()},\n    profile_url: {type: String},\n    email: {\n      type: String, trim: true, lowercase: true, required: false, minLength: 1, match: /.+\\@.+\\..+/\n    },\n    accessToken: {type: String},\n    refreshToken: {type: String},\n    email_verified: {type: Boolean},\n    provider_id: {type: String},\n    auth_id: {type: String},\n    provider: {type: String},\n    profile: {type: mongoose.Schema.Types.Object},\n    flags: [String],\n    picture_url: {type: String},\n    has_connected_bots: {type: Boolean, required: true, default: false},\n    pages_access: {type: Boolean, required: true, default: false},\n    subscriptions_access: {type: Boolean, required: true, default: false},\n    payments_access: {type: Boolean, required: true, default: false},\n    bot_subscriptions: [{type: mongoose.Schema.Types.ObjectId, ref: 'bot', required: false}],\n    ip: [String],\n    history: [mongoose.Schema.Types.Object]\n  }, {timestamps: {createdAt: 'created_at', updatedAt: 'updated_at'}}, {collection: 'user'})\n\n  UserSchema.index({name: 1})\n  UserSchema.index({email: 1})\n  UserSchema.index({provider_id: 1})\n\n  try {\n    // Throws an error if \"Name\" hasn't been registered\n    Model = mongoose.model('user')\n  } catch (e) {\n    Model = mongoose.model('user', UserSchema)\n  }\n  return Model\n}\n"]}